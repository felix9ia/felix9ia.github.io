(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{586:function(t,a,v){"use strict";v.r(a);var _=v(1),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"容器化可迭代的单机快速运维思路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#容器化可迭代的单机快速运维思路"}},[t._v("#")]),t._v(" 容器化可迭代的单机快速运维思路")]),t._v(" "),v("p",[t._v("以下是我作为运维小白的想法。")]),t._v(" "),v("h2",{attrs:{id:"开发运维一体化cli-工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发运维一体化cli-工具"}},[t._v("#")]),t._v(" 开发运维一体化CLI 工具")]),t._v(" "),v("ul",[v("li",[t._v("分布式调用，前端本机自启服务，自己的数据。解决多个C端中心化调用同一服务器进行测试，防止数据扰动的问题，实现数据隔离")]),t._v(" "),v("li",[t._v("C端无需修改配置文件，CLI修改host实现一键切换测试环境")]),t._v(" "),v("li",[t._v("为集群/分布式的快速部署验证节点进行伸缩测试打基础。")])]),t._v(" "),v("h2",{attrs:{id:"docker镜像仓库的优势"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像仓库的优势"}},[t._v("#")]),t._v(" docker镜像仓库的优势")]),t._v(" "),v("ul",[v("li",[t._v("Gitlab 本身可以 CI/CD，无需加 Jenkins，如无必要，勿增实体")]),t._v(" "),v("li",[t._v("通过镜像，真正实现了开发到运维之间的源代码隔离，尤其是对于对TO B的项目")]),t._v(" "),v("li",[t._v("配合CLI工具，运维只需在客户的服务器上只需一键实现拉取仓库到重启应用")])]),t._v(" "),v("h2",{attrs:{id:"cli的部署脚本实现版本管理和迭代"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cli的部署脚本实现版本管理和迭代"}},[t._v("#")]),t._v(" CLI的部署脚本实现版本管理和迭代")]),t._v(" "),v("ul",[v("li",[t._v("大家都不愿意维护文档，部署脚本实现版本管理，本身就是一个可追溯操作手册")]),t._v(" "),v("li",[t._v("可以迅速交接一个项目，进入到新项目中")]),t._v(" "),v("li",[t._v("从运维小白的开箱可用到迭代优化进阶有清晰的运维进阶路线")]),t._v(" "),v("li",[t._v("通过fork仓库实现根据不同的项目可以调整部署流程")])]),t._v(" "),v("p",[t._v("到目前为止，单机部署方案算是进入到一个较为理想的阶段。只是比较理想，还有很多要做。")])])}),[],!1,null,null,null);a.default=r.exports}}]);